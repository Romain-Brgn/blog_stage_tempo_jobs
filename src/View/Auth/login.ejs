<section
  class="d-flex align-items-center"
  style="min-height: 100svh; padding: 24px 12px"
>
  <div class="container">
    <!-- Wrapper centr√© et limit√© en largeur pour rester √©l√©gant sur grands √©crans -->
    <div class="mx-auto" style="max-width: 560px">
      <div class="text-center mb-4">
        <img
          src="/Image/blue_logo.svg"
          alt="TempoJobs"
          style="max-width: 80%; height: auto; max-height: 75px"
        />
      </div>

      <h1 class="h3 text-center brand-title mb-1">Connexion</h1>
      <p class="text-center text-muted mb-4">Ravi de vous revoir üëã</p>

      <%- include('../partials/flash', { flash }) %>

      <div class="card border-0 shadow-sm rounded-4">
        <div class="card-body p-4 p-md-5">
          <form id="loginForm" novalidate class="needs-validation">
            <div class="mb-3">
              <label for="identifier" class="form-label"
                >Email ou pseudonyme</label
              >
              <input
                type="text"
                class="form-control"
                id="identifier"
                name="identifier"
                placeholder="ex. alice@exemple.com ou alice_92"
                required
                autocomplete="username"
              />
              <div class="invalid-feedback">
                Renseignez votre email ou votre pseudonyme.
              </div>
            </div>

            <div class="mb-2">
              <label for="password" class="form-label">Mot de passe</label>
              <div class="input-group">
                <input
                  type="password"
                  class="form-control"
                  id="password"
                  name="password"
                  placeholder="Votre mot de passe"
                  required
                  autocomplete="current-password"
                />
                <button
                  type="button"
                  class="btn btn-outline-secondary"
                  id="togglePwd"
                  tabindex="-1"
                  aria-label="Afficher/masquer le mot de passe"
                  title="Afficher/masquer"
                >
                  üëÅ
                </button>
                <div class="invalid-feedback">Le mot de passe est requis.</div>
              </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-4">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="remember" />
                <label class="form-check-label" for="remember"
                  >Se souvenir de moi</label
                >
              </div>
              <a href="/auth/forgot" class="small link-brand"
                >Mot de passe oubli√© ?</a
              >
            </div>

            <button type="submit" class="btn btn-brand w-100">
              Se connecter
            </button>

            <div
              id="formError"
              class="alert alert-danger py-2 small mt-3 d-none"
            ></div>

            <p class="text-center text-muted small mt-4 mb-0">
              Pas encore de compte ?
              <a href="/auth/register" class="link-brand">Cr√©er un compte</a>
            </p>
          </form>
        </div>
      </div>

      <!-- Petit espace en bas pour respirer sur mobile -->
      <div style="height: 12px"></div>
    </div>
  </div>
</section>

<script>
  const form = document.getElementById("loginForm");
  const errBox = document.getElementById("formError");
  const togglePwd = document.getElementById("togglePwd");
  const pwdInput = document.getElementById("password");

  togglePwd?.addEventListener("click", () => {
    pwdInput.type = pwdInput.type === "text" ? "password" : "text";
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    errBox.classList.add("d-none");
    errBox.textContent = "";
    if (!form.checkValidity()) {
      form.classList.add("was-validated");
      return;
    }

    const payload = {
      identifier: form.identifier.value.trim(),
      password: form.password.value,
    };

    try {
      const res = await fetch("/auth/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        credentials: "include", // pour le cookie refresh_token
        body: JSON.stringify(payload),
      });

      const data = await res.json().catch(() => ({}));
      if (!res.ok) {
        errBox.textContent = data.message || "Erreur de connexion.";
        errBox.classList.remove("d-none");
        return;
      }

      sessionStorage.setItem("access_token", data.access_token);
      window.location.assign("/admin/ping");
    } catch {
      errBox.textContent = "Erreur r√©seau. R√©essayez.";
      errBox.classList.remove("d-none");
    }
  });
</script>
